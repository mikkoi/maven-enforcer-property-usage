${project.name}
===

[Maven Enforcer Plugin](http://maven.apache.org/enforcer/maven-enforcer-plugin/)
provides goals to control certain environmental constraints such as Maven version,
JDK version and OS family along with many more standard rules and user created rules.

This project, artifact `${project.artifactId}`, is a user created
[custom rule](https://maven.apache.org/enforcer/enforcer-api/writing-a-custom-rule.html)
to verify the usage of defined properties in the source files of the build.

Rationale
---

It often happens during development that different properties are defined and used,
and then taken out of use but definition is forgotten; they get "left behind"
in the `resources/*.properties` file. This Maven Enforcer rule allows the build
to verify these following:


* All properties which are defined in properties files, are also used in the source code.
* All properties used in the source code are also defined in properties files.
* No property is defined more than once in properties files.
* When used properties are extracted from the source code, a project policy can be forced:
    * on property name...
    * on how to access them (via Spring Placeholders, via getProperty, etc.)...
    * ... via regexp-sentences.


---

* To know more about the rule's configuration and parameters, check the [Configuration](configuration.html) page.
* For a quick adoption of the Enforcer rule, check the [Usage](usage.html) page.
* Released builds are available from [Maven Central](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.github.mikkoi.maven.enforcer.rule%22%20a%3A%22property-usage-rule%22).
